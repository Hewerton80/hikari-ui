import { CSS as CSSStitches } from "@stitches/core";
import { fontSizes } from "./fontSizes";
import { shadows } from "./shadows";
export declare const css: <Composers extends (string | import("@stitches/core/types/util").Function | {
    [name: string]: unknown;
})[], CSS_1 = import("@stitches/core/types/css-util").CSS<{
    bpBase: `(min-width: ${number}px)`;
    bpSm: `(min-width: ${number}px)`;
    bpMd: `(min-width: ${number}px)`;
    bpLg: `(min-width: ${number}px)`;
    bpXl: `(min-width: ${number}px)`;
    bp2xl: `(min-width: ${number}px)`;
}, {
    colors: {
        body: string;
        "dark-body": string;
        "dark-card": string;
        "dark-screen": string;
        input: string;
        primary: string;
        secondary: string;
        success: string;
        danger: string;
        warning: string;
        info: string;
        dark: string;
        light: string;
        muted: string;
        white: string;
        black: string;
        gray: string;
        "dark-hover": string;
        "gray-light": string;
        "gray-lighter": string;
        "gray-lightest": string;
        "gray-border": string;
        transparent: string;
    };
    fontSizes: {
        xs: string;
        sm: string;
        base: string;
        lg: string;
        xl: string;
        "2xl": string;
        "3xl": string;
        "4xl": string;
        "5xl": string;
        "6xl": string;
        "7xl": string;
    };
    lineHeights: {
        xs: string;
        sm: string;
        base: string;
        lg: string;
        xl: string;
        "2xl": string;
        "3xl": string;
        "4xl": string;
        "5xl": number;
        "6xl": number;
        "7xl": number;
    };
    space: {
        0: number;
        0.25: string;
        0.5: string;
        1: string;
        1.5: string;
        1.75: string;
        2: string;
        2.5: string;
        3: string;
        3.5: string;
        4: string;
        5: string;
        5.5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        11.5: string;
        12: string;
        14: string;
        16: string;
        20: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        44: string;
        46: string;
        48: string;
        52: string;
        56: string;
        60: string;
        64: string;
        72: string;
        80: string;
        96: string;
    };
    borderStyles: {
        0: number;
        0.25: string;
        0.5: string;
        1: string;
        1.5: string;
        1.75: string;
        2: string;
        2.5: string;
        3: string;
        3.5: string;
        4: string;
        5: string;
        5.5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        11.5: string;
        12: string;
        14: string;
        16: string;
        20: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        44: string;
        46: string;
        48: string;
        52: string;
        56: string;
        60: string;
        64: string;
        72: string;
        80: string;
        96: string;
    };
    borderWidths: {
        0: number;
        0.25: string;
        0.5: string;
        1: string;
        1.5: string;
        1.75: string;
        2: string;
        2.5: string;
        3: string;
        3.5: string;
        4: string;
        5: string;
        5.5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        11.5: string;
        12: string;
        14: string;
        16: string;
        20: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        44: string;
        46: string;
        48: string;
        52: string;
        56: string;
        60: string;
        64: string;
        72: string;
        80: string;
        96: string;
    };
    radii: {
        0: number;
        0.25: string;
        0.5: string;
        1: string;
        1.5: string;
        1.75: string;
        2: string;
        2.5: string;
        3: string;
        3.5: string;
        4: string;
        5: string;
        5.5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        11.5: string;
        12: string;
        14: string;
        16: string;
        20: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        44: string;
        46: string;
        48: string;
        52: string;
        56: string;
        60: string;
        64: string;
        72: string;
        80: string;
        96: string;
    };
    sizes: {
        0: number;
        0.25: string;
        0.5: string;
        1: string;
        1.5: string;
        1.75: string;
        2: string;
        2.5: string;
        3: string;
        3.5: string;
        4: string;
        5: string;
        5.5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        11.5: string;
        12: string;
        14: string;
        16: string;
        20: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        44: string;
        46: string;
        48: string;
        52: string;
        56: string;
        60: string;
        64: string;
        72: string;
        80: string;
        96: string;
    };
}, import("@stitches/core/types/config").DefaultThemeMap, {
    text: (value: keyof typeof fontSizes) => {
        fontSize: string;
        lineHeight: string | number;
    };
    mx: (value: string) => {
        marginLeft: string;
        marginRight: string;
    };
    my: (value: string) => {
        marginTop: string;
        marginBottom: string;
    };
    px: (value: string) => {
        paddingLeft: string;
        paddingRight: string;
    };
    py: (value: string) => {
        paddingTop: string;
        paddingBottom: string;
    };
    size: (value: string | number) => {
        width: string | number;
        height: string | number;
    };
    ring: (color: string) => {
        boxShadow: string;
    };
    shadow: (shadow: keyof typeof shadows) => {
        boxShadow: string;
    };
    positionCenter: (position: "fixed" | "absolute") => {
        position: "fixed" | "absolute";
        top: string;
        left: string;
        transform: string;
    };
    spaceY: (value: string | number) => {
        "& > * + *": {
            marginTop: string | number;
        };
    };
    spaceX: (value: string | number) => {
        "& > * + *": {
            marginLeft: string | number;
        };
    };
}>>(...composers: { [K in keyof Composers]: string extends Composers[K] ? Composers[K] : Composers[K] extends string | import("@stitches/core/types/util").Function ? Composers[K] : import("@stitches/core/types/stitches").RemoveIndex<CSS_1> & {
    variants?: {
        [x: string]: {
            [x: string]: CSS_1;
            [x: number]: CSS_1;
        };
    };
    compoundVariants?: (("variants" extends keyof Composers[K] ? Composers[K][keyof Composers[K] & "variants"] extends infer T ? { [Name in keyof T]?: import("@stitches/core/types/util").String | import("@stitches/core/types/util").Widen<keyof Composers[K][keyof Composers[K] & "variants"][Name]>; } : never : import("@stitches/core/types/util").WideObject) & {
        css: CSS_1;
    })[];
    defaultVariants?: "variants" extends keyof Composers[K] ? Composers[K][keyof Composers[K] & "variants"] extends infer T_1 ? { [Name_1 in keyof T_1]?: import("@stitches/core/types/util").String | import("@stitches/core/types/util").Widen<keyof Composers[K][keyof Composers[K] & "variants"][Name_1]>; } : never : import("@stitches/core/types/util").WideObject;
} & CSS_1 & (Composers[K] extends infer T_2 ? { [K2 in keyof T_2]: K2 extends "compoundVariants" | "defaultVariants" | "variants" ? unknown : K2 extends keyof CSS_1 ? CSS_1[K2] : unknown; } : never); }) => import("@stitches/core/types/styled-component").CssComponent<import("@stitches/core/types/styled-component").StyledComponentType<Composers>, import("@stitches/core/types/styled-component").StyledComponentProps<Composers>, {
    bpBase: `(min-width: ${number}px)`;
    bpSm: `(min-width: ${number}px)`;
    bpMd: `(min-width: ${number}px)`;
    bpLg: `(min-width: ${number}px)`;
    bpXl: `(min-width: ${number}px)`;
    bp2xl: `(min-width: ${number}px)`;
}, CSS_1>, globalCss: <Styles extends {
    [K: string]: any;
}>(...styles: ({
    '@import'?: unknown;
    '@font-face'?: unknown;
} & { [K in keyof Styles]: K extends "@import" ? string | string[] : K extends "@font-face" ? import("@stitches/core/types/css").AtRule.FontFace | import("@stitches/core/types/css").AtRule.FontFace[] : K extends `@keyframes ${string}` ? {
    [x: string]: import("@stitches/core/types/css-util").CSS<{
        bpBase: `(min-width: ${number}px)`;
        bpSm: `(min-width: ${number}px)`;
        bpMd: `(min-width: ${number}px)`;
        bpLg: `(min-width: ${number}px)`;
        bpXl: `(min-width: ${number}px)`;
        bp2xl: `(min-width: ${number}px)`;
    }, {
        colors: {
            body: string;
            "dark-body": string;
            "dark-card": string;
            "dark-screen": string;
            input: string;
            primary: string;
            secondary: string;
            success: string;
            danger: string;
            warning: string;
            info: string;
            dark: string;
            light: string;
            muted: string;
            white: string;
            black: string;
            gray: string;
            "dark-hover": string;
            "gray-light": string;
            "gray-lighter": string;
            "gray-lightest": string;
            "gray-border": string;
            transparent: string;
        };
        fontSizes: {
            xs: string;
            sm: string;
            base: string;
            lg: string;
            xl: string;
            "2xl": string;
            "3xl": string;
            "4xl": string;
            "5xl": string;
            "6xl": string;
            "7xl": string;
        };
        lineHeights: {
            xs: string;
            sm: string;
            base: string;
            lg: string;
            xl: string;
            "2xl": string;
            "3xl": string;
            "4xl": string;
            "5xl": number;
            "6xl": number;
            "7xl": number;
        };
        space: {
            0: number;
            0.25: string;
            0.5: string;
            1: string;
            1.5: string;
            1.75: string;
            2: string;
            2.5: string;
            3: string;
            3.5: string;
            4: string;
            5: string;
            5.5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            11.5: string;
            12: string;
            14: string;
            16: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            44: string;
            46: string;
            48: string;
            52: string;
            56: string;
            60: string;
            64: string;
            72: string;
            80: string;
            96: string;
        };
        borderStyles: {
            0: number;
            0.25: string;
            0.5: string;
            1: string;
            1.5: string;
            1.75: string;
            2: string;
            2.5: string;
            3: string;
            3.5: string;
            4: string;
            5: string;
            5.5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            11.5: string;
            12: string;
            14: string;
            16: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            44: string;
            46: string;
            48: string;
            52: string;
            56: string;
            60: string;
            64: string;
            72: string;
            80: string;
            96: string;
        };
        borderWidths: {
            0: number;
            0.25: string;
            0.5: string;
            1: string;
            1.5: string;
            1.75: string;
            2: string;
            2.5: string;
            3: string;
            3.5: string;
            4: string;
            5: string;
            5.5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            11.5: string;
            12: string;
            14: string;
            16: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            44: string;
            46: string;
            48: string;
            52: string;
            56: string;
            60: string;
            64: string;
            72: string;
            80: string;
            96: string;
        };
        radii: {
            0: number;
            0.25: string;
            0.5: string;
            1: string;
            1.5: string;
            1.75: string;
            2: string;
            2.5: string;
            3: string;
            3.5: string;
            4: string;
            5: string;
            5.5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            11.5: string;
            12: string;
            14: string;
            16: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            44: string;
            46: string;
            48: string;
            52: string;
            56: string;
            60: string;
            64: string;
            72: string;
            80: string;
            96: string;
        };
        sizes: {
            0: number;
            0.25: string;
            0.5: string;
            1: string;
            1.5: string;
            1.75: string;
            2: string;
            2.5: string;
            3: string;
            3.5: string;
            4: string;
            5: string;
            5.5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            11.5: string;
            12: string;
            14: string;
            16: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            44: string;
            46: string;
            48: string;
            52: string;
            56: string;
            60: string;
            64: string;
            72: string;
            80: string;
            96: string;
        };
    }, import("@stitches/core/types/config").DefaultThemeMap, {
        text: (value: keyof typeof fontSizes) => {
            fontSize: string;
            lineHeight: string | number;
        };
        mx: (value: string) => {
            marginLeft: string;
            marginRight: string;
        };
        my: (value: string) => {
            marginTop: string;
            marginBottom: string;
        };
        px: (value: string) => {
            paddingLeft: string;
            paddingRight: string;
        };
        py: (value: string) => {
            paddingTop: string;
            paddingBottom: string;
        };
        size: (value: string | number) => {
            width: string | number;
            height: string | number;
        };
        ring: (color: string) => {
            boxShadow: string;
        };
        shadow: (shadow: keyof typeof shadows) => {
            boxShadow: string;
        };
        positionCenter: (position: "fixed" | "absolute") => {
            position: "fixed" | "absolute";
            top: string;
            left: string;
            transform: string;
        };
        spaceY: (value: string | number) => {
            "& > * + *": {
                marginTop: string | number;
            };
        };
        spaceX: (value: string | number) => {
            "& > * + *": {
                marginLeft: string | number;
            };
        };
    }>;
} : K extends `@property ${string}` ? import("@stitches/core/types/css").AtRule.Property : import("@stitches/core/types/css-util").CSS<{
    bpBase: `(min-width: ${number}px)`;
    bpSm: `(min-width: ${number}px)`;
    bpMd: `(min-width: ${number}px)`;
    bpLg: `(min-width: ${number}px)`;
    bpXl: `(min-width: ${number}px)`;
    bp2xl: `(min-width: ${number}px)`;
}, {
    colors: {
        body: string;
        "dark-body": string;
        "dark-card": string;
        "dark-screen": string;
        input: string;
        primary: string;
        secondary: string;
        success: string;
        danger: string;
        warning: string;
        info: string;
        dark: string;
        light: string;
        muted: string;
        white: string;
        black: string;
        gray: string;
        "dark-hover": string;
        "gray-light": string;
        "gray-lighter": string;
        "gray-lightest": string;
        "gray-border": string;
        transparent: string;
    };
    fontSizes: {
        xs: string;
        sm: string;
        base: string;
        lg: string;
        xl: string;
        "2xl": string;
        "3xl": string;
        "4xl": string;
        "5xl": string;
        "6xl": string;
        "7xl": string;
    };
    lineHeights: {
        xs: string;
        sm: string;
        base: string;
        lg: string;
        xl: string;
        "2xl": string;
        "3xl": string;
        "4xl": string;
        "5xl": number;
        "6xl": number;
        "7xl": number;
    };
    space: {
        0: number;
        0.25: string;
        0.5: string;
        1: string;
        1.5: string;
        1.75: string;
        2: string;
        2.5: string;
        3: string;
        3.5: string;
        4: string;
        5: string;
        5.5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        11.5: string;
        12: string;
        14: string;
        16: string;
        20: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        44: string;
        46: string;
        48: string;
        52: string;
        56: string;
        60: string;
        64: string;
        72: string;
        80: string;
        96: string;
    };
    borderStyles: {
        0: number;
        0.25: string;
        0.5: string;
        1: string;
        1.5: string;
        1.75: string;
        2: string;
        2.5: string;
        3: string;
        3.5: string;
        4: string;
        5: string;
        5.5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        11.5: string;
        12: string;
        14: string;
        16: string;
        20: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        44: string;
        46: string;
        48: string;
        52: string;
        56: string;
        60: string;
        64: string;
        72: string;
        80: string;
        96: string;
    };
    borderWidths: {
        0: number;
        0.25: string;
        0.5: string;
        1: string;
        1.5: string;
        1.75: string;
        2: string;
        2.5: string;
        3: string;
        3.5: string;
        4: string;
        5: string;
        5.5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        11.5: string;
        12: string;
        14: string;
        16: string;
        20: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        44: string;
        46: string;
        48: string;
        52: string;
        56: string;
        60: string;
        64: string;
        72: string;
        80: string;
        96: string;
    };
    radii: {
        0: number;
        0.25: string;
        0.5: string;
        1: string;
        1.5: string;
        1.75: string;
        2: string;
        2.5: string;
        3: string;
        3.5: string;
        4: string;
        5: string;
        5.5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        11.5: string;
        12: string;
        14: string;
        16: string;
        20: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        44: string;
        46: string;
        48: string;
        52: string;
        56: string;
        60: string;
        64: string;
        72: string;
        80: string;
        96: string;
    };
    sizes: {
        0: number;
        0.25: string;
        0.5: string;
        1: string;
        1.5: string;
        1.75: string;
        2: string;
        2.5: string;
        3: string;
        3.5: string;
        4: string;
        5: string;
        5.5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        11.5: string;
        12: string;
        14: string;
        16: string;
        20: string;
        24: string;
        28: string;
        32: string;
        36: string;
        40: string;
        44: string;
        46: string;
        48: string;
        52: string;
        56: string;
        60: string;
        64: string;
        72: string;
        80: string;
        96: string;
    };
}, import("@stitches/core/types/config").DefaultThemeMap, {
    text: (value: keyof typeof fontSizes) => {
        fontSize: string;
        lineHeight: string | number;
    };
    mx: (value: string) => {
        marginLeft: string;
        marginRight: string;
    };
    my: (value: string) => {
        marginTop: string;
        marginBottom: string;
    };
    px: (value: string) => {
        paddingLeft: string;
        paddingRight: string;
    };
    py: (value: string) => {
        paddingTop: string;
        paddingBottom: string;
    };
    size: (value: string | number) => {
        width: string | number;
        height: string | number;
    };
    ring: (color: string) => {
        boxShadow: string;
    };
    shadow: (shadow: keyof typeof shadows) => {
        boxShadow: string;
    };
    positionCenter: (position: "fixed" | "absolute") => {
        position: "fixed" | "absolute";
        top: string;
        left: string;
        transform: string;
    };
    spaceY: (value: string | number) => {
        "& > * + *": {
            marginTop: string | number;
        };
    };
    spaceX: (value: string | number) => {
        "& > * + *": {
            marginLeft: string | number;
        };
    };
}>; })[]) => () => string, createTheme: <Argument0 extends string | ({
    colors?: {
        body?: string | number | boolean;
        "dark-body"?: string | number | boolean;
        "dark-card"?: string | number | boolean;
        "dark-screen"?: string | number | boolean;
        input?: string | number | boolean;
        primary?: string | number | boolean;
        secondary?: string | number | boolean;
        success?: string | number | boolean;
        danger?: string | number | boolean;
        warning?: string | number | boolean;
        info?: string | number | boolean;
        dark?: string | number | boolean;
        light?: string | number | boolean;
        muted?: string | number | boolean;
        white?: string | number | boolean;
        black?: string | number | boolean;
        gray?: string | number | boolean;
        "dark-hover"?: string | number | boolean;
        "gray-light"?: string | number | boolean;
        "gray-lighter"?: string | number | boolean;
        "gray-lightest"?: string | number | boolean;
        "gray-border"?: string | number | boolean;
        transparent?: string | number | boolean;
    };
    fontSizes?: {
        xs?: string | number | boolean;
        sm?: string | number | boolean;
        base?: string | number | boolean;
        lg?: string | number | boolean;
        xl?: string | number | boolean;
        "2xl"?: string | number | boolean;
        "3xl"?: string | number | boolean;
        "4xl"?: string | number | boolean;
        "5xl"?: string | number | boolean;
        "6xl"?: string | number | boolean;
        "7xl"?: string | number | boolean;
    };
    lineHeights?: {
        xs?: string | number | boolean;
        sm?: string | number | boolean;
        base?: string | number | boolean;
        lg?: string | number | boolean;
        xl?: string | number | boolean;
        "2xl"?: string | number | boolean;
        "3xl"?: string | number | boolean;
        "4xl"?: string | number | boolean;
        "5xl"?: string | number | boolean;
        "6xl"?: string | number | boolean;
        "7xl"?: string | number | boolean;
    };
    space?: {
        0?: string | number | boolean;
        0.25?: string | number | boolean;
        0.5?: string | number | boolean;
        1?: string | number | boolean;
        1.5?: string | number | boolean;
        1.75?: string | number | boolean;
        2?: string | number | boolean;
        2.5?: string | number | boolean;
        3?: string | number | boolean;
        3.5?: string | number | boolean;
        4?: string | number | boolean;
        5?: string | number | boolean;
        5.5?: string | number | boolean;
        6?: string | number | boolean;
        7?: string | number | boolean;
        8?: string | number | boolean;
        9?: string | number | boolean;
        10?: string | number | boolean;
        11?: string | number | boolean;
        11.5?: string | number | boolean;
        12?: string | number | boolean;
        14?: string | number | boolean;
        16?: string | number | boolean;
        20?: string | number | boolean;
        24?: string | number | boolean;
        28?: string | number | boolean;
        32?: string | number | boolean;
        36?: string | number | boolean;
        40?: string | number | boolean;
        44?: string | number | boolean;
        46?: string | number | boolean;
        48?: string | number | boolean;
        52?: string | number | boolean;
        56?: string | number | boolean;
        60?: string | number | boolean;
        64?: string | number | boolean;
        72?: string | number | boolean;
        80?: string | number | boolean;
        96?: string | number | boolean;
    };
    borderStyles?: {
        0?: string | number | boolean;
        0.25?: string | number | boolean;
        0.5?: string | number | boolean;
        1?: string | number | boolean;
        1.5?: string | number | boolean;
        1.75?: string | number | boolean;
        2?: string | number | boolean;
        2.5?: string | number | boolean;
        3?: string | number | boolean;
        3.5?: string | number | boolean;
        4?: string | number | boolean;
        5?: string | number | boolean;
        5.5?: string | number | boolean;
        6?: string | number | boolean;
        7?: string | number | boolean;
        8?: string | number | boolean;
        9?: string | number | boolean;
        10?: string | number | boolean;
        11?: string | number | boolean;
        11.5?: string | number | boolean;
        12?: string | number | boolean;
        14?: string | number | boolean;
        16?: string | number | boolean;
        20?: string | number | boolean;
        24?: string | number | boolean;
        28?: string | number | boolean;
        32?: string | number | boolean;
        36?: string | number | boolean;
        40?: string | number | boolean;
        44?: string | number | boolean;
        46?: string | number | boolean;
        48?: string | number | boolean;
        52?: string | number | boolean;
        56?: string | number | boolean;
        60?: string | number | boolean;
        64?: string | number | boolean;
        72?: string | number | boolean;
        80?: string | number | boolean;
        96?: string | number | boolean;
    };
    borderWidths?: {
        0?: string | number | boolean;
        0.25?: string | number | boolean;
        0.5?: string | number | boolean;
        1?: string | number | boolean;
        1.5?: string | number | boolean;
        1.75?: string | number | boolean;
        2?: string | number | boolean;
        2.5?: string | number | boolean;
        3?: string | number | boolean;
        3.5?: string | number | boolean;
        4?: string | number | boolean;
        5?: string | number | boolean;
        5.5?: string | number | boolean;
        6?: string | number | boolean;
        7?: string | number | boolean;
        8?: string | number | boolean;
        9?: string | number | boolean;
        10?: string | number | boolean;
        11?: string | number | boolean;
        11.5?: string | number | boolean;
        12?: string | number | boolean;
        14?: string | number | boolean;
        16?: string | number | boolean;
        20?: string | number | boolean;
        24?: string | number | boolean;
        28?: string | number | boolean;
        32?: string | number | boolean;
        36?: string | number | boolean;
        40?: string | number | boolean;
        44?: string | number | boolean;
        46?: string | number | boolean;
        48?: string | number | boolean;
        52?: string | number | boolean;
        56?: string | number | boolean;
        60?: string | number | boolean;
        64?: string | number | boolean;
        72?: string | number | boolean;
        80?: string | number | boolean;
        96?: string | number | boolean;
    };
    radii?: {
        0?: string | number | boolean;
        0.25?: string | number | boolean;
        0.5?: string | number | boolean;
        1?: string | number | boolean;
        1.5?: string | number | boolean;
        1.75?: string | number | boolean;
        2?: string | number | boolean;
        2.5?: string | number | boolean;
        3?: string | number | boolean;
        3.5?: string | number | boolean;
        4?: string | number | boolean;
        5?: string | number | boolean;
        5.5?: string | number | boolean;
        6?: string | number | boolean;
        7?: string | number | boolean;
        8?: string | number | boolean;
        9?: string | number | boolean;
        10?: string | number | boolean;
        11?: string | number | boolean;
        11.5?: string | number | boolean;
        12?: string | number | boolean;
        14?: string | number | boolean;
        16?: string | number | boolean;
        20?: string | number | boolean;
        24?: string | number | boolean;
        28?: string | number | boolean;
        32?: string | number | boolean;
        36?: string | number | boolean;
        40?: string | number | boolean;
        44?: string | number | boolean;
        46?: string | number | boolean;
        48?: string | number | boolean;
        52?: string | number | boolean;
        56?: string | number | boolean;
        60?: string | number | boolean;
        64?: string | number | boolean;
        72?: string | number | boolean;
        80?: string | number | boolean;
        96?: string | number | boolean;
    };
    sizes?: {
        0?: string | number | boolean;
        0.25?: string | number | boolean;
        0.5?: string | number | boolean;
        1?: string | number | boolean;
        1.5?: string | number | boolean;
        1.75?: string | number | boolean;
        2?: string | number | boolean;
        2.5?: string | number | boolean;
        3?: string | number | boolean;
        3.5?: string | number | boolean;
        4?: string | number | boolean;
        5?: string | number | boolean;
        5.5?: string | number | boolean;
        6?: string | number | boolean;
        7?: string | number | boolean;
        8?: string | number | boolean;
        9?: string | number | boolean;
        10?: string | number | boolean;
        11?: string | number | boolean;
        11.5?: string | number | boolean;
        12?: string | number | boolean;
        14?: string | number | boolean;
        16?: string | number | boolean;
        20?: string | number | boolean;
        24?: string | number | boolean;
        28?: string | number | boolean;
        32?: string | number | boolean;
        36?: string | number | boolean;
        40?: string | number | boolean;
        44?: string | number | boolean;
        46?: string | number | boolean;
        48?: string | number | boolean;
        52?: string | number | boolean;
        56?: string | number | boolean;
        60?: string | number | boolean;
        64?: string | number | boolean;
        72?: string | number | boolean;
        80?: string | number | boolean;
        96?: string | number | boolean;
    };
} & {
    [x: string]: {
        [x: string]: string | number | boolean;
        [x: number]: string | number | boolean;
    };
}), Argument1 extends string | ({
    colors?: {
        body?: string | number | boolean;
        "dark-body"?: string | number | boolean;
        "dark-card"?: string | number | boolean;
        "dark-screen"?: string | number | boolean;
        input?: string | number | boolean;
        primary?: string | number | boolean;
        secondary?: string | number | boolean;
        success?: string | number | boolean;
        danger?: string | number | boolean;
        warning?: string | number | boolean;
        info?: string | number | boolean;
        dark?: string | number | boolean;
        light?: string | number | boolean;
        muted?: string | number | boolean;
        white?: string | number | boolean;
        black?: string | number | boolean;
        gray?: string | number | boolean;
        "dark-hover"?: string | number | boolean;
        "gray-light"?: string | number | boolean;
        "gray-lighter"?: string | number | boolean;
        "gray-lightest"?: string | number | boolean;
        "gray-border"?: string | number | boolean;
        transparent?: string | number | boolean;
    };
    fontSizes?: {
        xs?: string | number | boolean;
        sm?: string | number | boolean;
        base?: string | number | boolean;
        lg?: string | number | boolean;
        xl?: string | number | boolean;
        "2xl"?: string | number | boolean;
        "3xl"?: string | number | boolean;
        "4xl"?: string | number | boolean;
        "5xl"?: string | number | boolean;
        "6xl"?: string | number | boolean;
        "7xl"?: string | number | boolean;
    };
    lineHeights?: {
        xs?: string | number | boolean;
        sm?: string | number | boolean;
        base?: string | number | boolean;
        lg?: string | number | boolean;
        xl?: string | number | boolean;
        "2xl"?: string | number | boolean;
        "3xl"?: string | number | boolean;
        "4xl"?: string | number | boolean;
        "5xl"?: string | number | boolean;
        "6xl"?: string | number | boolean;
        "7xl"?: string | number | boolean;
    };
    space?: {
        0?: string | number | boolean;
        0.25?: string | number | boolean;
        0.5?: string | number | boolean;
        1?: string | number | boolean;
        1.5?: string | number | boolean;
        1.75?: string | number | boolean;
        2?: string | number | boolean;
        2.5?: string | number | boolean;
        3?: string | number | boolean;
        3.5?: string | number | boolean;
        4?: string | number | boolean;
        5?: string | number | boolean;
        5.5?: string | number | boolean;
        6?: string | number | boolean;
        7?: string | number | boolean;
        8?: string | number | boolean;
        9?: string | number | boolean;
        10?: string | number | boolean;
        11?: string | number | boolean;
        11.5?: string | number | boolean;
        12?: string | number | boolean;
        14?: string | number | boolean;
        16?: string | number | boolean;
        20?: string | number | boolean;
        24?: string | number | boolean;
        28?: string | number | boolean;
        32?: string | number | boolean;
        36?: string | number | boolean;
        40?: string | number | boolean;
        44?: string | number | boolean;
        46?: string | number | boolean;
        48?: string | number | boolean;
        52?: string | number | boolean;
        56?: string | number | boolean;
        60?: string | number | boolean;
        64?: string | number | boolean;
        72?: string | number | boolean;
        80?: string | number | boolean;
        96?: string | number | boolean;
    };
    borderStyles?: {
        0?: string | number | boolean;
        0.25?: string | number | boolean;
        0.5?: string | number | boolean;
        1?: string | number | boolean;
        1.5?: string | number | boolean;
        1.75?: string | number | boolean;
        2?: string | number | boolean;
        2.5?: string | number | boolean;
        3?: string | number | boolean;
        3.5?: string | number | boolean;
        4?: string | number | boolean;
        5?: string | number | boolean;
        5.5?: string | number | boolean;
        6?: string | number | boolean;
        7?: string | number | boolean;
        8?: string | number | boolean;
        9?: string | number | boolean;
        10?: string | number | boolean;
        11?: string | number | boolean;
        11.5?: string | number | boolean;
        12?: string | number | boolean;
        14?: string | number | boolean;
        16?: string | number | boolean;
        20?: string | number | boolean;
        24?: string | number | boolean;
        28?: string | number | boolean;
        32?: string | number | boolean;
        36?: string | number | boolean;
        40?: string | number | boolean;
        44?: string | number | boolean;
        46?: string | number | boolean;
        48?: string | number | boolean;
        52?: string | number | boolean;
        56?: string | number | boolean;
        60?: string | number | boolean;
        64?: string | number | boolean;
        72?: string | number | boolean;
        80?: string | number | boolean;
        96?: string | number | boolean;
    };
    borderWidths?: {
        0?: string | number | boolean;
        0.25?: string | number | boolean;
        0.5?: string | number | boolean;
        1?: string | number | boolean;
        1.5?: string | number | boolean;
        1.75?: string | number | boolean;
        2?: string | number | boolean;
        2.5?: string | number | boolean;
        3?: string | number | boolean;
        3.5?: string | number | boolean;
        4?: string | number | boolean;
        5?: string | number | boolean;
        5.5?: string | number | boolean;
        6?: string | number | boolean;
        7?: string | number | boolean;
        8?: string | number | boolean;
        9?: string | number | boolean;
        10?: string | number | boolean;
        11?: string | number | boolean;
        11.5?: string | number | boolean;
        12?: string | number | boolean;
        14?: string | number | boolean;
        16?: string | number | boolean;
        20?: string | number | boolean;
        24?: string | number | boolean;
        28?: string | number | boolean;
        32?: string | number | boolean;
        36?: string | number | boolean;
        40?: string | number | boolean;
        44?: string | number | boolean;
        46?: string | number | boolean;
        48?: string | number | boolean;
        52?: string | number | boolean;
        56?: string | number | boolean;
        60?: string | number | boolean;
        64?: string | number | boolean;
        72?: string | number | boolean;
        80?: string | number | boolean;
        96?: string | number | boolean;
    };
    radii?: {
        0?: string | number | boolean;
        0.25?: string | number | boolean;
        0.5?: string | number | boolean;
        1?: string | number | boolean;
        1.5?: string | number | boolean;
        1.75?: string | number | boolean;
        2?: string | number | boolean;
        2.5?: string | number | boolean;
        3?: string | number | boolean;
        3.5?: string | number | boolean;
        4?: string | number | boolean;
        5?: string | number | boolean;
        5.5?: string | number | boolean;
        6?: string | number | boolean;
        7?: string | number | boolean;
        8?: string | number | boolean;
        9?: string | number | boolean;
        10?: string | number | boolean;
        11?: string | number | boolean;
        11.5?: string | number | boolean;
        12?: string | number | boolean;
        14?: string | number | boolean;
        16?: string | number | boolean;
        20?: string | number | boolean;
        24?: string | number | boolean;
        28?: string | number | boolean;
        32?: string | number | boolean;
        36?: string | number | boolean;
        40?: string | number | boolean;
        44?: string | number | boolean;
        46?: string | number | boolean;
        48?: string | number | boolean;
        52?: string | number | boolean;
        56?: string | number | boolean;
        60?: string | number | boolean;
        64?: string | number | boolean;
        72?: string | number | boolean;
        80?: string | number | boolean;
        96?: string | number | boolean;
    };
    sizes?: {
        0?: string | number | boolean;
        0.25?: string | number | boolean;
        0.5?: string | number | boolean;
        1?: string | number | boolean;
        1.5?: string | number | boolean;
        1.75?: string | number | boolean;
        2?: string | number | boolean;
        2.5?: string | number | boolean;
        3?: string | number | boolean;
        3.5?: string | number | boolean;
        4?: string | number | boolean;
        5?: string | number | boolean;
        5.5?: string | number | boolean;
        6?: string | number | boolean;
        7?: string | number | boolean;
        8?: string | number | boolean;
        9?: string | number | boolean;
        10?: string | number | boolean;
        11?: string | number | boolean;
        11.5?: string | number | boolean;
        12?: string | number | boolean;
        14?: string | number | boolean;
        16?: string | number | boolean;
        20?: string | number | boolean;
        24?: string | number | boolean;
        28?: string | number | boolean;
        32?: string | number | boolean;
        36?: string | number | boolean;
        40?: string | number | boolean;
        44?: string | number | boolean;
        46?: string | number | boolean;
        48?: string | number | boolean;
        52?: string | number | boolean;
        56?: string | number | boolean;
        60?: string | number | boolean;
        64?: string | number | boolean;
        72?: string | number | boolean;
        80?: string | number | boolean;
        96?: string | number | boolean;
    };
} & {
    [x: string]: {
        [x: string]: string | number | boolean;
        [x: number]: string | number | boolean;
    };
})>(nameOrScalesArg0: Argument0, nameOrScalesArg1?: Argument1) => string & {
    className: string;
    selector: string;
} & (Argument0 extends string ? import("@stitches/core/types/stitches").ThemeTokens<Argument1, "hikari"> : import("@stitches/core/types/stitches").ThemeTokens<Argument0, "hikari">), config: {
    prefix: "hikari";
    media: {
        bpBase: `(min-width: ${number}px)`;
        bpSm: `(min-width: ${number}px)`;
        bpMd: `(min-width: ${number}px)`;
        bpLg: `(min-width: ${number}px)`;
        bpXl: `(min-width: ${number}px)`;
        bp2xl: `(min-width: ${number}px)`;
    };
    theme: {
        colors: {
            body: string;
            "dark-body": string;
            "dark-card": string;
            "dark-screen": string;
            input: string;
            primary: string;
            secondary: string;
            success: string;
            danger: string;
            warning: string;
            info: string;
            dark: string;
            light: string;
            muted: string;
            white: string;
            black: string;
            gray: string;
            "dark-hover": string;
            "gray-light": string;
            "gray-lighter": string;
            "gray-lightest": string;
            "gray-border": string;
            transparent: string;
        };
        fontSizes: {
            xs: string;
            sm: string;
            base: string;
            lg: string;
            xl: string;
            "2xl": string;
            "3xl": string;
            "4xl": string;
            "5xl": string;
            "6xl": string;
            "7xl": string;
        };
        lineHeights: {
            xs: string;
            sm: string;
            base: string;
            lg: string;
            xl: string;
            "2xl": string;
            "3xl": string;
            "4xl": string;
            "5xl": number;
            "6xl": number;
            "7xl": number;
        };
        space: {
            0: number;
            0.25: string;
            0.5: string;
            1: string;
            1.5: string;
            1.75: string;
            2: string;
            2.5: string;
            3: string;
            3.5: string;
            4: string;
            5: string;
            5.5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            11.5: string;
            12: string;
            14: string;
            16: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            44: string;
            46: string;
            48: string;
            52: string;
            56: string;
            60: string;
            64: string;
            72: string;
            80: string;
            96: string;
        };
        borderStyles: {
            0: number;
            0.25: string;
            0.5: string;
            1: string;
            1.5: string;
            1.75: string;
            2: string;
            2.5: string;
            3: string;
            3.5: string;
            4: string;
            5: string;
            5.5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            11.5: string;
            12: string;
            14: string;
            16: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            44: string;
            46: string;
            48: string;
            52: string;
            56: string;
            60: string;
            64: string;
            72: string;
            80: string;
            96: string;
        };
        borderWidths: {
            0: number;
            0.25: string;
            0.5: string;
            1: string;
            1.5: string;
            1.75: string;
            2: string;
            2.5: string;
            3: string;
            3.5: string;
            4: string;
            5: string;
            5.5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            11.5: string;
            12: string;
            14: string;
            16: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            44: string;
            46: string;
            48: string;
            52: string;
            56: string;
            60: string;
            64: string;
            72: string;
            80: string;
            96: string;
        };
        radii: {
            0: number;
            0.25: string;
            0.5: string;
            1: string;
            1.5: string;
            1.75: string;
            2: string;
            2.5: string;
            3: string;
            3.5: string;
            4: string;
            5: string;
            5.5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            11.5: string;
            12: string;
            14: string;
            16: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            44: string;
            46: string;
            48: string;
            52: string;
            56: string;
            60: string;
            64: string;
            72: string;
            80: string;
            96: string;
        };
        sizes: {
            0: number;
            0.25: string;
            0.5: string;
            1: string;
            1.5: string;
            1.75: string;
            2: string;
            2.5: string;
            3: string;
            3.5: string;
            4: string;
            5: string;
            5.5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            11.5: string;
            12: string;
            14: string;
            16: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            44: string;
            46: string;
            48: string;
            52: string;
            56: string;
            60: string;
            64: string;
            72: string;
            80: string;
            96: string;
        };
    };
    themeMap: import("@stitches/core/types/config").DefaultThemeMap;
    utils: {
        text: (value: keyof typeof fontSizes) => {
            fontSize: string;
            lineHeight: string | number;
        };
        mx: (value: string) => {
            marginLeft: string;
            marginRight: string;
        };
        my: (value: string) => {
            marginTop: string;
            marginBottom: string;
        };
        px: (value: string) => {
            paddingLeft: string;
            paddingRight: string;
        };
        py: (value: string) => {
            paddingTop: string;
            paddingBottom: string;
        };
        size: (value: string | number) => {
            width: string | number;
            height: string | number;
        };
        ring: (color: string) => {
            boxShadow: string;
        };
        shadow: (shadow: keyof typeof shadows) => {
            boxShadow: string;
        };
        positionCenter: (position: "fixed" | "absolute") => {
            position: "fixed" | "absolute";
            top: string;
            left: string;
            transform: string;
        };
        spaceY: (value: string | number) => {
            "& > * + *": {
                marginTop: string | number;
            };
        };
        spaceX: (value: string | number) => {
            "& > * + *": {
                marginLeft: string | number;
            };
        };
    };
}, keyframes: (style: {
    [offset: string]: import("@stitches/core/types/css-util").CSS<{
        bpBase: `(min-width: ${number}px)`;
        bpSm: `(min-width: ${number}px)`;
        bpMd: `(min-width: ${number}px)`;
        bpLg: `(min-width: ${number}px)`;
        bpXl: `(min-width: ${number}px)`;
        bp2xl: `(min-width: ${number}px)`;
    }, {
        colors: {
            body: string;
            "dark-body": string;
            "dark-card": string;
            "dark-screen": string;
            input: string;
            primary: string;
            secondary: string;
            success: string;
            danger: string;
            warning: string;
            info: string;
            dark: string;
            light: string;
            muted: string;
            white: string;
            black: string;
            gray: string;
            "dark-hover": string;
            "gray-light": string;
            "gray-lighter": string;
            "gray-lightest": string;
            "gray-border": string;
            transparent: string;
        };
        fontSizes: {
            xs: string;
            sm: string;
            base: string;
            lg: string;
            xl: string;
            "2xl": string;
            "3xl": string;
            "4xl": string;
            "5xl": string;
            "6xl": string;
            "7xl": string;
        };
        lineHeights: {
            xs: string;
            sm: string;
            base: string;
            lg: string;
            xl: string;
            "2xl": string;
            "3xl": string;
            "4xl": string;
            "5xl": number;
            "6xl": number;
            "7xl": number;
        };
        space: {
            0: number;
            0.25: string;
            0.5: string;
            1: string;
            1.5: string;
            1.75: string;
            2: string;
            2.5: string;
            3: string;
            3.5: string;
            4: string;
            5: string;
            5.5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            11.5: string;
            12: string;
            14: string;
            16: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            44: string;
            46: string;
            48: string;
            52: string;
            56: string;
            60: string;
            64: string;
            72: string;
            80: string;
            96: string;
        };
        borderStyles: {
            0: number;
            0.25: string;
            0.5: string;
            1: string;
            1.5: string;
            1.75: string;
            2: string;
            2.5: string;
            3: string;
            3.5: string;
            4: string;
            5: string;
            5.5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            11.5: string;
            12: string;
            14: string;
            16: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            44: string;
            46: string;
            48: string;
            52: string;
            56: string;
            60: string;
            64: string;
            72: string;
            80: string;
            96: string;
        };
        borderWidths: {
            0: number;
            0.25: string;
            0.5: string;
            1: string;
            1.5: string;
            1.75: string;
            2: string;
            2.5: string;
            3: string;
            3.5: string;
            4: string;
            5: string;
            5.5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            11.5: string;
            12: string;
            14: string;
            16: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            44: string;
            46: string;
            48: string;
            52: string;
            56: string;
            60: string;
            64: string;
            72: string;
            80: string;
            96: string;
        };
        radii: {
            0: number;
            0.25: string;
            0.5: string;
            1: string;
            1.5: string;
            1.75: string;
            2: string;
            2.5: string;
            3: string;
            3.5: string;
            4: string;
            5: string;
            5.5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            11.5: string;
            12: string;
            14: string;
            16: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            44: string;
            46: string;
            48: string;
            52: string;
            56: string;
            60: string;
            64: string;
            72: string;
            80: string;
            96: string;
        };
        sizes: {
            0: number;
            0.25: string;
            0.5: string;
            1: string;
            1.5: string;
            1.75: string;
            2: string;
            2.5: string;
            3: string;
            3.5: string;
            4: string;
            5: string;
            5.5: string;
            6: string;
            7: string;
            8: string;
            9: string;
            10: string;
            11: string;
            11.5: string;
            12: string;
            14: string;
            16: string;
            20: string;
            24: string;
            28: string;
            32: string;
            36: string;
            40: string;
            44: string;
            46: string;
            48: string;
            52: string;
            56: string;
            60: string;
            64: string;
            72: string;
            80: string;
            96: string;
        };
    }, import("@stitches/core/types/config").DefaultThemeMap, {
        text: (value: keyof typeof fontSizes) => {
            fontSize: string;
            lineHeight: string | number;
        };
        mx: (value: string) => {
            marginLeft: string;
            marginRight: string;
        };
        my: (value: string) => {
            marginTop: string;
            marginBottom: string;
        };
        px: (value: string) => {
            paddingLeft: string;
            paddingRight: string;
        };
        py: (value: string) => {
            paddingTop: string;
            paddingBottom: string;
        };
        size: (value: string | number) => {
            width: string | number;
            height: string | number;
        };
        ring: (color: string) => {
            boxShadow: string;
        };
        shadow: (shadow: keyof typeof shadows) => {
            boxShadow: string;
        };
        positionCenter: (position: "fixed" | "absolute") => {
            position: "fixed" | "absolute";
            top: string;
            left: string;
            transform: string;
        };
        spaceY: (value: string | number) => {
            "& > * + *": {
                marginTop: string | number;
            };
        };
        spaceX: (value: string | number) => {
            "& > * + *": {
                marginLeft: string | number;
            };
        };
    }>;
}) => {
    (): string;
    name: string;
};
export type CSS = CSSStitches<typeof config>;
export declare const darkTheme: string & {
    className: string;
    selector: string;
} & import("@stitches/core/types/stitches").ThemeTokens<{}, "hikari">;
export declare const lightTheme: string & {
    className: string;
    selector: string;
} & import("@stitches/core/types/stitches").ThemeTokens<{}, "hikari">;
